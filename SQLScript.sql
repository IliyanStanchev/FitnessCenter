DROP TABLE IF EXISTS SALARIES;
DROP TABLE IF EXISTS CUSTOMER_SUBSCRIPTIONS;
DROP TABLE IF EXISTS CUSTOMERS;
DROP TABLE IF EXISTS EMPLOYEE_SCHEDULES;
DROP TABLE IF EXISTS EMPLOYEES;
DROP TABLE IF EXISTS ROLES;
DROP TABLE IF EXISTS PRODUCTS;
DROP TABLE IF EXISTS SUBSCRIPTIONS;
DROP TABLE IF EXISTS DELIVERIES;
DROP TABLE IF EXISTS PROVIDERS;
DROP TABLE IF EXISTS EQUIPMENTS;
DROP TABLE IF EXISTS BALANCES;

CREATE TABLE CUSTOMERS
(
    ID                  INT PRIMARY KEY IDENTITY (1, 1),
    FIRST_NAME          VARCHAR (64) NOT NULL,
    LAST_NAME           VARCHAR (64) NOT NULL,
    REGISTRATION_DATE   DATETIME     NOT NULL,
    EMAIL               VARCHAR (64) NOT NULL,
    PHONE_NUMBER        VARCHAR (64) NOT NULL,
);

CREATE TABLE CUSTOMER_SUBSCRIPTIONS
(
    ID  			    INT PRIMARY KEY IDENTITY (1, 1),
    CREATION_DATE       DATETIME NOT NULL,
    EXPIRATION_DATE     DATETIME NOT NULL,
    TYPE                INT NOT NULL,
    CUSTOMER_ID         INT NOT NULL,

    CONSTRAINT FK_CUSTOMER_SUBSCRIPTIONS_CUSTOMERS FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS (ID)
);

CREATE TABLE ROLES
(
    ID					INT PRIMARY KEY IDENTITY (1, 1),
    NAME				VARCHAR (64) NOT NULL,
);

CREATE TABLE EMPLOYEES
(
    ID					INT PRIMARY KEY IDENTITY (1, 1),
    USERNAME			VARCHAR (64) NOT NULL,
    PASSWORD			VARCHAR (256) NOT NULL,
    FIRST_NAME			VARCHAR (64) NOT NULL,
    LAST_NAME			VARCHAR (64) NOT NULL,
    APPOINTMENT_DATE	DATETIME NOT NULL,
    SALARY				FLOAT NOT NULL,
    ROLE_ID				INT NOT NULL,

    CONSTRAINT FK_EMPLOYEES_ROLE_ID FOREIGN KEY (ROLE_ID) REFERENCES ROLES (ID)
);

CREATE TABLE PRODUCTS
(
    ID					INT PRIMARY KEY IDENTITY (1, 1),
    NAME				VARCHAR (64) NOT NULL,
    AMOUNT				INT NOT NULL,
    BARCODE				VARCHAR (128) NOT NULL,
    PRICE				FLOAT NOT NULL,
    CATEGORY			INT NOT NULL,
    LAST_DELIVERY_DATE  DATETIME NOT NULL,
    NEXT_DELIVERY_DATE  DATETIME NOT NULL,
);

CREATE TABLE SUBSCRIPTIONS
(
    ID					INT PRIMARY KEY IDENTITY (1, 1),
    NAME				VARCHAR (64) NOT NULL,
    PRICE				FLOAT NOT NULL,
    DURATION_IN_MONTHS	INT NOT NULL,
);

CREATE TABLE PROVIDERS
(
    ID INT PRIMARY KEY IDENTITY (1,1),
    NAME VARCHAR (64) NOT NULL,
    ADDRESS VARCHAR (64) NOT NULL,
    PHONE_NUMBER VARCHAR (64) NOT NULL,
    EMAIL VARCHAR (64) NOT NULL,
);

CREATE TABLE DELIVERIES
(
    ID					INT PRIMARY KEY IDENTITY (1, 1),
    PROVIDER_ID			INT NOT NULL,
    DATE				DATETIME NOT NULL,
    PRICE				FLOAT NOT NULL,
    CONSTRAINT FK_DELIVERIES_PROVIDER_ID FOREIGN KEY (PROVIDER_ID) REFERENCES PROVIDERS (ID)
);

CREATE TABLE EMPLOYEE_SCHEDULES
(
    ID					INT PRIMARY KEY IDENTITY (1, 1),
    EMPLOYEE_ID			INT NOT NULL,
    START_DATE			DATETIME NOT NULL,
    END_DATE			DATETIME NOT NULL,
    CONSTRAINT FK_EMPLOYEE_SCHEDULES_EMPLOYEE_ID FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES (ID)
);

CREATE TABLE EQUIPMENTS
(
    ID					INT PRIMARY KEY IDENTITY (1, 1),
    NAME				VARCHAR (64) NOT NULL,
    COUNT				INT NOT NULL,
    REPAIRS_COUNT		INT NOT NULL,
    WARRANTY_PERIOD		DATETIME NOT NULL,
    REPLACE_DATE		DATETIME NOT NULL,
    PRICE				FLOAT NOT NULL,
);

CREATE TABLE BALANCES
(
    ID					INT PRIMARY KEY IDENTITY (1, 1),
    DATE				DATETIME NOT NULL,
    OPERATION_TYPE		INT NOT NULL,
    VALUE				FLOAT NOT NULL,
    DESCRIPTION			VARCHAR (256) NOT NULL,
);

CREATE TABLE SALARIES
(
    ID					INT PRIMARY KEY IDENTITY (1, 1),
    EMPLOYEE_ID			INT NOT NULL,
    DATE				DATETIME NOT NULL,
    VALUE				FLOAT NOT NULL,
    CONSTRAINT FK_SALARIES_EMPLOYEE_ID FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES (ID)
);

CREATE TABLE INSTRUCTOR_SCHEDULES
(
    ID					INT PRIMARY KEY IDENTITY (1, 1),
    EMPLOYEE_ID			INT NOT NULL,
    CUSTOMER_ID			INT NOT NULL,
    TRAINING_TYPE		INT NOT NULL,
    START_DATE			DATETIME NOT NULL,
    END_DATE			DATETIME NOT NULL,

    CONSTRAINT FK_INSTRUCTOR_SCHEDULES_EMPLOYEE_ID FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES (ID)
);
